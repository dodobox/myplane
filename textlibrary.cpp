#include "textlibrary.h"

#define NOCOLOR ( 0 )
#define OKCOLOR ( 0xff8080ff )
uint32 CTextLibrary::m_vTextList[ETC_COUNT][CHARGRAPHIHEIGHT][CHARGRAPHIWIDTH] = {
    {{ NOCOLOR,NOCOLOR,OKCOLOR,OKCOLOR,NOCOLOR },
    { NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR,OKCOLOR },
    { NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR,OKCOLOR },
    { NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR,OKCOLOR },
    { NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR,OKCOLOR },
    { NOCOLOR,NOCOLOR,OKCOLOR,OKCOLOR,NOCOLOR },
    },

    { { NOCOLOR,NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR },
    { NOCOLOR,OKCOLOR,OKCOLOR,NOCOLOR,NOCOLOR },
    { NOCOLOR,NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR },
    { NOCOLOR,NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR },
    { NOCOLOR,NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR },
    { NOCOLOR,NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR },
    },

    { { NOCOLOR,NOCOLOR,OKCOLOR,OKCOLOR,NOCOLOR },
    { NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR,OKCOLOR },
    { NOCOLOR,NOCOLOR,NOCOLOR,NOCOLOR,OKCOLOR },
    { NOCOLOR,NOCOLOR,OKCOLOR,OKCOLOR,NOCOLOR },
    { NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR,NOCOLOR },
    { NOCOLOR,OKCOLOR,OKCOLOR,OKCOLOR,OKCOLOR },
    },

    { { NOCOLOR,NOCOLOR,OKCOLOR,OKCOLOR,NOCOLOR },
    { NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR,OKCOLOR },
    { NOCOLOR,NOCOLOR,NOCOLOR,OKCOLOR,NOCOLOR },
    { NOCOLOR,NOCOLOR,NOCOLOR,NOCOLOR,OKCOLOR },
    { NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR,OKCOLOR },
    { NOCOLOR,NOCOLOR,OKCOLOR,OKCOLOR,NOCOLOR },
    },

    { { NOCOLOR,NOCOLOR,NOCOLOR,OKCOLOR,NOCOLOR },
    { NOCOLOR,NOCOLOR,OKCOLOR,OKCOLOR,NOCOLOR },
    { NOCOLOR,NOCOLOR,OKCOLOR,OKCOLOR,NOCOLOR },
    { NOCOLOR,OKCOLOR,NOCOLOR,OKCOLOR,NOCOLOR },
    { NOCOLOR,OKCOLOR,OKCOLOR,OKCOLOR,OKCOLOR },
    { NOCOLOR,NOCOLOR,NOCOLOR,OKCOLOR,NOCOLOR },
    },

    { { NOCOLOR,OKCOLOR,OKCOLOR,OKCOLOR,NOCOLOR },
    { NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR,NOCOLOR },
    { NOCOLOR,OKCOLOR,OKCOLOR,NOCOLOR,NOCOLOR },
    { NOCOLOR,NOCOLOR,NOCOLOR,OKCOLOR,NOCOLOR },
    { NOCOLOR,NOCOLOR,NOCOLOR,OKCOLOR,NOCOLOR },
    { NOCOLOR,OKCOLOR,OKCOLOR,NOCOLOR,NOCOLOR },
    },

    { { NOCOLOR,NOCOLOR,OKCOLOR,OKCOLOR,NOCOLOR },
    { NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR,NOCOLOR },
    { NOCOLOR,OKCOLOR,OKCOLOR,OKCOLOR,NOCOLOR },
    { NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR,OKCOLOR },
    { NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR,OKCOLOR },
    { NOCOLOR,NOCOLOR,OKCOLOR,OKCOLOR,NOCOLOR },
    },

    { { NOCOLOR,OKCOLOR,OKCOLOR,OKCOLOR,NOCOLOR },
    { NOCOLOR,NOCOLOR,NOCOLOR,OKCOLOR,NOCOLOR },
    { NOCOLOR,NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR },
    { NOCOLOR,NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR },
    { NOCOLOR,NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR },
    { NOCOLOR,NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR },
    },

    { { NOCOLOR,NOCOLOR,OKCOLOR,OKCOLOR,NOCOLOR },
    { NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR,OKCOLOR },
    { NOCOLOR,NOCOLOR,OKCOLOR,OKCOLOR,NOCOLOR },
    { NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR,OKCOLOR },
    { NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR,OKCOLOR },
    { NOCOLOR,NOCOLOR,OKCOLOR,OKCOLOR,NOCOLOR },
    },

    { { NOCOLOR,NOCOLOR,OKCOLOR,OKCOLOR,NOCOLOR },
    { NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR,OKCOLOR },
    { NOCOLOR,NOCOLOR,OKCOLOR,OKCOLOR,OKCOLOR },
    { NOCOLOR,NOCOLOR,NOCOLOR,NOCOLOR,OKCOLOR },
    { NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR,OKCOLOR },
    { NOCOLOR,NOCOLOR,OKCOLOR,OKCOLOR,NOCOLOR },
    },

    { { NOCOLOR,NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR },
    { NOCOLOR,NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR },
    { NOCOLOR,NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR },
    { NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR,NOCOLOR },
    { NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR,NOCOLOR },
    { NOCOLOR,OKCOLOR,NOCOLOR,NOCOLOR,NOCOLOR },
    },
};


int32 CTextLibrary::m_vTextWidthList[ETC_COUNT] = {
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
};


void CTextLibrary::DrawText( CCanvas* pCavnas, int32 x, int32 y, const char* strTextCode, uint32 nColor ){
    int32 _x = x;
    char* _strText = (char*)strTextCode;
    while( *_strText ){
        ETextCode _eTextCode = ETC_0;
        switch( *_strText ){
        case '0':_eTextCode = ETC_0; break;
        case '1':_eTextCode = ETC_1; break;
        case '2':_eTextCode = ETC_2; break;
        case '3':_eTextCode = ETC_3; break;
        case '4':_eTextCode = ETC_4; break;
        case '5':_eTextCode = ETC_5; break;
        case '6':_eTextCode = ETC_6; break;
        case '7':_eTextCode = ETC_7; break;
        case '8':_eTextCode = ETC_8; break;
        case '9':_eTextCode = ETC_9; break;
        case '/':_eTextCode = ETC_XIE; break;
        }
        uint32* _pData = m_vTextList[_eTextCode][0];
        pCavnas->DrawRect( _x, y, m_vTextWidthList[_eTextCode], CHARGRAPHIHEIGHT, _pData );
        _strText ++;
        _x += m_vTextWidthList[_eTextCode];
    }
}